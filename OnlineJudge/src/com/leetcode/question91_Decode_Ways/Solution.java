package com.leetcode.question91_Decode_Ways;

import java.util.HashMap;
import java.util.Map;

public class Solution {
	private Map<String,Integer> countMap = new HashMap<String, Integer>();
    public int numDecodings(String s) {
    	if(s==null || "".equals(s) || "0".equals(s) || s.startsWith("0")){
    		return 0;
    	}
    	if(s.contains("00") || s.contains("30") || s.contains("40")
    			|| s.contains("50") || s.contains("60") || s.contains("70")
    			|| s.contains("80") || s.contains("90")){
    		return 0;
    	}
    	return dpHandler(s);
    }
    
    private int dpHandler(String s) {
    	if(countMap.containsKey(s)){
    		return countMap.get(s);
    	}
        if(s.length()==1){
        	return 1;
        }
        
        if(s.length()==2){
        	if(isNowWordsTwoWays(s)==1){
        		return 2;
        	}else{
        		return 1;
        	}
        }
        
        int n = 0;
        int x = isNowWordsTwoWays(s);
        if(x==0){
        	n = numDecodings(s.substring(1));
        }else if(x==1){
        	n = numDecodings(s.substring(1)) + numDecodings(s.substring(2));
        }else{
        	n = numDecodings(s.substring(2));
        }
        
        if(n>0){
        	countMap.put(s, n);
        }
        return n;
	}

	private int isNowWordsTwoWays(String s){
    	int cn0 = s.charAt(0)-'0';
    	if(s.length()>=2){
    		int cn1 = s.charAt(1)-'0';
    		if((cn0==1 && cn1>=1 && cn1<=9)
    				|| (cn0==2 && cn1>=1 && cn1<=6)){
    			return 1;
    		}else if((cn0==1 && cn1==0) || (cn0==2 && cn1==0)){
    			return 2;
    		}
    	}
    	return 0;
    }
    
    public static void main(String[] args) {
    	long beginMillis = System.currentTimeMillis();
//		System.out.println(new Solution().numDecodings("1787897759966261825913315262377298132516969578441236833255596967132573482281598412163216914566534565"));
//    	System.out.println(new Solution().numDecodings("17878977599"));
//    	System.out.println(new Solution().numDecodings("10"));
//    	System.out.println(new Solution().numDecodings("0"));
//    	System.out.println(new Solution().numDecodings("00"));
    	System.out.println(new Solution().numDecodings("100"));
//    	System.out.println(new Solution().numDecodings
    	System.out.println(System.currentTimeMillis()-beginMillis);
	}
}
//"1787897759966261825913315262377298132516969578441236833255596967132573482281598412163216914566534565"